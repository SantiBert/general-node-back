// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                      String         @id @default(uuid())
  email                   String         @unique
  full_name               String
  alternative_email       String?
  phone_number            String?
  status_id               Int
  role_id                 Int
  created_at              DateTime       @default(now())
  updated_at              DateTime?
  deleted_at              DateTime?
  is_active               Boolean        @default(true)
  password                Password?
  validation              Validation?
  session                 Session[]
  status                  Status         @relation(fields: [status_id], references: [id])
  role                    Role           @relation(fields: [role_id], references: [id])
  @@map("users")
}

model Password {
  id                      Int             @id @default(autoincrement())
  user_id                 String          @unique
  hash                    String
  created_at              DateTime        @default(now())
  user                    User            @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("passwords")
}

model Session {
  id                      Int              @id @default(autoincrement())
  token                   String           @unique
  user_id                 String
  created_at              DateTime         @default(now())
  user                    User             @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Status {
  id                      Int              @id @default(autoincrement())
  name                    String           @unique
  users                   User[]

  @@map("statuses")
}

model Role {
  id                      Int               @id @default(autoincrement())
  name                    String            @unique
  //notification Notification[]
  //permissions  PermissionInRole[]
  user                    User[]

  @@map("roles")
}

model Validation {
  id                      Int               @id @default(autoincrement())
  token                   String            @unique
  user_id                 String            @unique
  created_at              DateTime          @default(now())
  user                    User              @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("validations")
}